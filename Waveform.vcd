$version Generated by VerilatedVcd $end
$timescale 1ps $end

 $scope module TOP $end
  $var wire  8 C bus_i [7:0] $end
  $var wire  1 D clk $end
  $var wire  1 E reset $end
  $scope module top $end
   $var wire  8 @ a_calc [7:0] $end
   $var wire  1 G a_out $end
   $var wire  1 + acc_out $end
   $var wire  1 , ad $end
   $var wire  4 4 address_ir [3:0] $end
   $var wire  8 A b_calc [7:0] $end
   $var wire  1 G b_out $end
   $var wire  8 H bus_d [7:0] $end
   $var wire  8 C bus_i [7:0] $end
   $var wire  8 B c_calc [7:0] $end
   $var wire  1 F c_out_acc $end
   $var wire  1 D clk $end
   $var wire  1 ) in_a $end
   $var wire  1 ' in_b $end
   $var wire  1 % ir_a $end
   $var wire  4 . ir_i [3:0] $end
   $var wire  1 & jmp $end
   $var wire  1 $ mar_a $end
   $var wire  1 * out_a $end
   $var wire  1 ( out_b $end
   $var wire  1 G out_bus $end
   $var wire  1 # pc_a $end
   $var wire  1 E reset $end
   $var wire  1 - sb $end
   $var wire  8 1 to_a [7:0] $end
   $var wire  8 3 to_acc [7:0] $end
   $var wire  8 2 to_b [7:0] $end
   $var wire  8 0 to_ir [7:0] $end
   $var wire  4 / to_ram [3:0] $end
   $scope module accumulator $end
    $var wire  8 B areg [7:0] $end
    $var wire  8 H bus_d [7:0] $end
    $var wire  1 D clk $end
    $var wire  8 3 from_inp [7:0] $end
    $var wire  1 F inp_in $end
    $var wire  1 G out_b $end
    $var wire  1 + out_o $end
    $var wire  8 B to_out [7:0] $end
   $upscope $end
   $scope module alu $end
    $var wire  1 , ad $end
    $var wire  8 H bus_d [7:0] $end
    $var wire  1 D clk $end
    $var wire  8 @ from_a [7:0] $end
    $var wire  8 A from_b [7:0] $end
    $var wire  8 5 out [7:0] $end
    $var wire  1 - sub $end
    $var wire  8 3 to_acc [7:0] $end
   $upscope $end
   $scope module areg $end
    $var wire  8 @ areg [7:0] $end
    $var wire  8 H bus_d [7:0] $end
    $var wire  1 D clk $end
    $var wire  8 1 from_inp [7:0] $end
    $var wire  1 * inp_in $end
    $var wire  1 G out_b $end
    $var wire  1 G out_o $end
    $var wire  8 @ to_out [7:0] $end
   $upscope $end
   $scope module breg $end
    $var wire  8 A areg [7:0] $end
    $var wire  8 H bus_d [7:0] $end
    $var wire  1 D clk $end
    $var wire  8 2 from_inp [7:0] $end
    $var wire  1 ( inp_in $end
    $var wire  1 G out_b $end
    $var wire  1 G out_o $end
    $var wire  8 A to_out [7:0] $end
   $upscope $end
   $scope module control $end
    $var wire  4 K OP_ADD [3:0] $end
    $var wire  4 N OP_DIV [3:0] $end
    $var wire  4 P OP_HLT [3:0] $end
    $var wire  4 O OP_JMP [3:0] $end
    $var wire  4 I OP_LDA [3:0] $end
    $var wire  4 J OP_LDB [3:0] $end
    $var wire  4 M OP_MUL [3:0] $end
    $var wire  4 L OP_SUB [3:0] $end
    $var wire  4 N OP_WRT [3:0] $end
    $var wire  1 + acc_out $end
    $var wire  1 , ad $end
    $var wire  1 G aflag $end
    $var wire  8 H bus_d [7:0] $end
    $var wire  8 C bus_i [7:0] $end
    $var wire  1 D clk $end
    $var wire  1 ) in_a $end
    $var wire  1 ' in_b $end
    $var wire  1 % ir_a $end
    $var wire  4 . ir_i [3:0] $end
    $var wire  1 & jmp $end
    $var wire  1 $ mar_a $end
    $var wire  1 * out_a $end
    $var wire  1 ( out_b $end
    $var wire  1 # pc_a $end
    $var wire  1 E reset $end
    $var wire  1 - sb $end
    $var wire  3 6 stagecount [2:0] $end
   $upscope $end
   $scope module counter $end
    $var wire  8 C bus_i [7:0] $end
    $var wire  1 D clk $end
    $var wire  4 4 from_ir [3:0] $end
    $var wire  1 & jmp $end
    $var wire  4 7 pc [3:0] $end
    $var wire  1 # pc_a $end
    $var wire  1 E reset $end
   $upscope $end
   $scope module ir $end
    $var wire  4 4 address [3:0] $end
    $var wire  8 C bus_i [7:0] $end
    $var wire  1 D clk $end
    $var wire  8 0 from_ram [7:0] $end
    $var wire  4 . instruction [3:0] $end
    $var wire  1 % ir_a $end
    $var wire  1 E reset $end
    $var wire  4 . to_ctrl [3:0] $end
    $var wire  4 4 to_ram [3:0] $end
   $upscope $end
   $scope module mar $end
    $var wire  4 / address [3:0] $end
    $var wire  8 C bus_i [7:0] $end
    $var wire  1 D clk $end
    $var wire  4 4 from_ir [3:0] $end
    $var wire  1 & jmp $end
    $var wire  1 $ mar_a $end
    $var wire  4 Q offset [3:0] $end
    $var wire  1 E reset $end
    $var wire  4 / to_ram [3:0] $end
   $upscope $end
   $scope module ram $end
    $var wire  4 4 address_ir [3:0] $end
    $var wire  1 D clk $end
    $var wire  1 ) in_a $end
    $var wire  1 ' in_b $end
    $var wire  1 + in_c $end
    $var wire  8 = index_ir [7:0] $end
    $var wire  8 > index_reg [7:0] $end
    $var wire  4 / mar_in [3:0] $end
    $var wire 129 8 mem [128:0] $end
    $var wire  1 * out_a $end
    $var wire  1 ( out_b $end
    $var wire  8 0 out_ir [7:0] $end
    $var wire  8 ? out_reg [7:0] $end
    $var wire  1 E reset $end
    $var wire  8 1 to_a [7:0] $end
    $var wire  8 2 to_b [7:0] $end
    $var wire  8 B to_c [7:0] $end
    $var wire  8 0 to_ir [7:0] $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
0#
0$
0%
0&
0'
0(
0)
0*
0+
0,
0-
b0000 .
b0000 /
b00000000 0
b00000000 1
b00000000 2
b00000000 3
b0000 4
b00000000 5
b000 6
b0000 7
b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 8
b00000000 =
b00000000 >
b00000000 ?
b00000000 @
b00000000 A
b00000000 B
b00000000 C
1D
0E
1F
0G
b00000000 H
b1000 I
b0100 J
b0010 K
b0001 L
b1100 M
b1010 N
b1001 O
b1111 P
b0000 Q
#1
0D
#2
1#
b001 6
b0001 7
b000000000000000000000000000000000111111111000111110100110100001101000011000001100000011101001011100100001010001011000011000000100 8
b00000001 C
1D
#3
0D
#4
0#
1$
b0001 /
b00000100 0
b010 6
b00000100 ?
b00000000 C
1D
#5
0D
#6
0$
1%
b0100 4
b011 6
b00001000 =
b00100000 >
1D
#7
0D
#8
0%
b10000110 0
b100 6
b10010111 ?
1D
#9
0D
#10
b101 6
b00110000 >
1D
#11
0D
#12
b000 6
b00001100 ?
1D
#13
0D
#14
1#
b001 6
b0010 7
b00000010 C
1D
#15
0D
#16
0#
1$
b0010 /
b010 6
b00000000 C
1D
#17
0D
#18
0$
1%
b1000 .
b0110 4
b011 6
b00010000 =
1D
#19
0D
#20
0%
1*
b01000101 0
b00001100 1
b100 6
1D
#21
b00001100 @
0D
#22
0*
b00000000 1
b101 6
b00101000 >
1D
#23
0D
#24
b000 6
b00001110 ?
1D
#25
0D
#26
1#
b001 6
b0011 7
b00000011 C
1D
#27
0D
#28
0#
1$
b0011 /
b010 6
b00000000 C
1D
#29
0D
#30
0$
1%
b0100 .
b0101 4
b011 6
b00011000 =
1D
#31
0D
#32
0%
1(
b00100001 0
b00001110 2
b100 6
1D
#33
b00001110 A
0D
#34
0(
b00000000 2
b101 6
b00001000 >
1D
#35
0D
#36
b000 6
b10000110 ?
1D
#37
0D
#38
1#
b001 6
b0100 7
b00000100 C
1D
#39
0D
#40
0#
1$
b0100 /
b010 6
b00000000 C
1D
#41
0D
#42
0$
1%
b0010 .
b0001 4
b011 6
b00100000 =
1D
#43
0D
#44
0%
1,
b10010111 0
b00011010 5
b100 6
1D
#45
0D
#46
0,
b00011010 3
b101 6
b00111000 >
1D
#47
b00011010 B
0D
#48
b000 6
1D
#49
0D
#50
1#
b001 6
b0101 7
b00000101 C
1D
#51
0D
#52
0#
1$
b0101 /
b010 6
b00000000 C
1D
#53
0D
#54
0$
1%
b1001 .
b0111 4
b011 6
b00101000 =
1D
#55
0D
#56
0%
1&
b0111 /
b00001110 0
b100 6
b0110 7
1D
#57
0D
#58
0&
b101 6
b00111000 =
b01110000 >
1D
#59
0D
#60
b10000110 0
b000 6
b00000000 ?
1D
#61
0D
#62
1#
b001 6
b0111 7
b00110000 >
b00000111 C
1D
#63
0D
#64
0#
1$
b010 6
b00001100 ?
b00000000 C
1D
#65
0D
#66
0$
1%
b1000 .
b0110 4
b011 6
1D
#67
0D
#68
0%
1*
b00001100 1
b100 6
1D
#69
0D
#70
0*
b00000000 1
b101 6
1D
#71
0D
#72
b000 6
1D
#73
0D
#74
1#
b001 6
b1000 7
b00001000 C
1D
#75
0D
#76
0#
1$
b1000 /
b010 6
b00000000 C
1D
#77
0D
#78
0$
1%
b011 6
b01000000 =
1D
#79
0D
#80
0%
1*
b00001100 1
b100 6
1D
#81
0D
#82
0*
b00000000 1
b101 6
1D
#83
0D
#84
b000 6
1D
#85
0D
#86
1#
b001 6
b1001 7
b00001001 C
1D
#87
0D
#88
0#
1$
b1001 /
b010 6
b00000000 C
1D
#89
0D
#90
0$
1%
b011 6
b01001000 =
1D
#91
0D
#92
0%
1*
b10100110 0
b00001100 1
b100 6
1D
#93
0D
#94
0*
b00000000 1
b101 6
1D
#95
0D
#96
b000 6
1D
#97
0D
#98
1#
b001 6
b1010 7
b00001010 C
1D
#99
0D
#100
0#
1$
b1010 /
b010 6
b00000000 C
1D
#101
0D
#102
0$
1%
b1010 .
b011 6
b01010000 =
1D
#103
0D
#104
0%
1+
b10001111 0
b100 6
b000011010000000000000000000000000111111111000111110100110100001101000011000001100000011101001011100100001010001011000011000000100 8
1D
#105
0D
#106
0+
b101 6
b01111000 >
1D
#107
0D
#108
b000 6
b00011010 ?
1D
#109
0D
#110
1#
b001 6
b1011 7
b00001011 C
1D
#111
0D
#112
0#
1$
b1011 /
b010 6
b00000000 C
1D
#113
0D
#114
0$
1%
b1000 .
b1111 4
b011 6
b01011000 =
1D
#115
0D
#116
0%
1*
b11111111 0
b00011010 1
b100 6
1D
#117
b00011010 @
0D
#118
0*
b00000000 1
b101 6
1D
#119
0D
#120
b000 6
1D
#121
0D
#122
1#
b001 6
b1100 7
b00001100 C
1D
#123
0D
#124
0#
1$
b1100 /
b010 6
b00000000 C
1D
#125
0D
#126
0$
1%
b1111 .
b011 6
b01100000 =
1D
#127
0D
#128
0%
b00000000 0
1D
#129
0D
#130
b00000000 >
1D
#131
0D
#132
b00000100 ?
1D
#133
0D
#134
1D
#135
0D
#136
1D
#137
0D
#138
1D
#139
0D
#140
1D
#141
0D
#142
1D
#143
0D
#144
1D
#145
0D
#146
1D
#147
0D
#148
1D
#149
0D
#150
1D
#151
0D
#152
1D
#153
0D
#154
1D
#155
0D
#156
1D
#157
0D
#158
1D
#159
0D
#160
1D
#161
0D
#162
1D
#163
0D
#164
1D
#165
0D
#166
1D
#167
0D
#168
1D
#169
0D
#170
1D
#171
0D
#172
1D
#173
0D
#174
1D
#175
0D
#176
1D
#177
0D
#178
1D
#179
0D
#180
1D
#181
0D
#182
1D
#183
0D
#184
1D
#185
0D
#186
1D
#187
0D
#188
1D
#189
0D
#190
1D
#191
0D
#192
1D
#193
0D
#194
1D
#195
0D
#196
1D
#197
0D
#198
1D
#199
0D
#200
1D
#201
0D
#202
1D
#203
0D
#204
1D
#205
0D
#206
1D
#207
0D
#208
1D
#209
0D
#210
1D
#211
0D
#212
1D
#213
0D
#214
1D
#215
0D
#216
1D
#217
0D
#218
1D
#219
0D
#220
1D
#221
0D
#222
1D
#223
0D
#224
1D
#225
0D
#226
1D
#227
0D
#228
1D
#229
0D
#230
1D
#231
0D
#232
1D
#233
0D
#234
1D
#235
0D
#236
1D
#237
0D
#238
1D
#239
0D
#240
1D
#241
0D
#242
1D
#243
0D
#244
1D
#245
0D
#246
1D
#247
0D
#248
1D
#249
0D
