$version Generated by VerilatedVcd $end
$timescale 1ps $end

 $scope module TOP $end
  $var wire  1 E clk $end
  $var wire  8 C led_1 [7:0] $end
  $var wire  8 D led_2 [7:0] $end
  $var wire  1 F reset $end
  $scope module top $end
   $var wire  1 E clk $end
   $var wire  8 C led_1 [7:0] $end
   $var wire  8 D led_2 [7:0] $end
   $var wire  1 F reset $end
   $scope module cpu $end
    $var wire  8 @ a_calc [7:0] $end
    $var wire  1 H a_out $end
    $var wire  1 + acc_out $end
    $var wire  1 , ad $end
    $var wire  4 4 address_ir [3:0] $end
    $var wire  8 A b_calc [7:0] $end
    $var wire  1 H b_out $end
    $var wire  8 C bus_d [7:0] $end
    $var wire  8 D bus_i [7:0] $end
    $var wire  8 B c_calc [7:0] $end
    $var wire  1 G c_out_acc $end
    $var wire  1 E clk $end
    $var wire  1 ) in_a $end
    $var wire  1 ' in_b $end
    $var wire  1 % ir_a $end
    $var wire  4 . ir_i [3:0] $end
    $var wire  1 & jmp $end
    $var wire  1 $ mar_a $end
    $var wire  1 * out_a $end
    $var wire  1 ( out_b $end
    $var wire  1 H out_bus $end
    $var wire  1 # pc_a $end
    $var wire  1 F reset $end
    $var wire  1 - sb $end
    $var wire  8 1 to_a [7:0] $end
    $var wire  8 3 to_acc [7:0] $end
    $var wire  8 2 to_b [7:0] $end
    $var wire  8 0 to_ir [7:0] $end
    $var wire  4 / to_ram [3:0] $end
    $scope module accumulator $end
     $var wire  8 B areg [7:0] $end
     $var wire  8 C bus_d [7:0] $end
     $var wire  1 E clk $end
     $var wire  8 3 from_inp [7:0] $end
     $var wire  1 G inp_in $end
     $var wire  1 H out_b $end
     $var wire  1 + out_o $end
     $var wire  8 B to_out [7:0] $end
    $upscope $end
    $scope module alu $end
     $var wire  1 , ad $end
     $var wire  8 C bus_d [7:0] $end
     $var wire  1 E clk $end
     $var wire  8 @ from_a [7:0] $end
     $var wire  8 A from_b [7:0] $end
     $var wire  8 5 out [7:0] $end
     $var wire  1 - sub $end
     $var wire  8 3 to_acc [7:0] $end
    $upscope $end
    $scope module areg $end
     $var wire  8 @ areg [7:0] $end
     $var wire  8 C bus_d [7:0] $end
     $var wire  1 E clk $end
     $var wire  8 1 from_inp [7:0] $end
     $var wire  1 * inp_in $end
     $var wire  1 H out_b $end
     $var wire  1 H out_o $end
     $var wire  8 @ to_out [7:0] $end
    $upscope $end
    $scope module breg $end
     $var wire  8 A areg [7:0] $end
     $var wire  8 C bus_d [7:0] $end
     $var wire  1 E clk $end
     $var wire  8 2 from_inp [7:0] $end
     $var wire  1 ( inp_in $end
     $var wire  1 H out_b $end
     $var wire  1 H out_o $end
     $var wire  8 A to_out [7:0] $end
    $upscope $end
    $scope module control $end
     $var wire  4 K OP_ADD [3:0] $end
     $var wire  4 N OP_HLT [3:0] $end
     $var wire  4 M OP_JMP [3:0] $end
     $var wire  4 I OP_LDA [3:0] $end
     $var wire  4 J OP_LDB [3:0] $end
     $var wire  4 L OP_SUB [3:0] $end
     $var wire  4 O OP_WRT [3:0] $end
     $var wire  1 + acc_out $end
     $var wire  1 , ad $end
     $var wire  1 H aflag $end
     $var wire  8 C bus_d [7:0] $end
     $var wire  8 D bus_i [7:0] $end
     $var wire  1 E clk $end
     $var wire  1 ) in_a $end
     $var wire  1 ' in_b $end
     $var wire  1 % ir_a $end
     $var wire  4 . ir_i [3:0] $end
     $var wire  1 & jmp $end
     $var wire  1 $ mar_a $end
     $var wire  1 * out_a $end
     $var wire  1 ( out_b $end
     $var wire  1 # pc_a $end
     $var wire  1 F reset $end
     $var wire  1 - sb $end
     $var wire  3 6 stagecount [2:0] $end
    $upscope $end
    $scope module counter $end
     $var wire  8 D bus_i [7:0] $end
     $var wire  1 E clk $end
     $var wire  4 4 from_ir [3:0] $end
     $var wire  1 & jmp $end
     $var wire  4 7 pc [3:0] $end
     $var wire  1 # pc_a $end
     $var wire  1 F reset $end
    $upscope $end
    $scope module ir $end
     $var wire  4 4 address [3:0] $end
     $var wire  8 D bus_i [7:0] $end
     $var wire  1 E clk $end
     $var wire  8 0 from_ram [7:0] $end
     $var wire  4 . instruction [3:0] $end
     $var wire  1 % ir_a $end
     $var wire  1 F reset $end
     $var wire  4 . to_ctrl [3:0] $end
     $var wire  4 4 to_ram [3:0] $end
    $upscope $end
    $scope module mar $end
     $var wire  4 / address [3:0] $end
     $var wire  8 D bus_i [7:0] $end
     $var wire  1 E clk $end
     $var wire  4 4 from_ir [3:0] $end
     $var wire  1 & jmp $end
     $var wire  1 $ mar_a $end
     $var wire  4 P offset [3:0] $end
     $var wire  1 F reset $end
     $var wire  4 / to_ram [3:0] $end
    $upscope $end
    $scope module ram $end
     $var wire  4 4 address_ir [3:0] $end
     $var wire  1 E clk $end
     $var wire  1 ) in_a $end
     $var wire  1 ' in_b $end
     $var wire  1 + in_c $end
     $var wire  8 = index_ir [7:0] $end
     $var wire  8 > index_reg [7:0] $end
     $var wire  4 / mar_in [3:0] $end
     $var wire 129 8 mem [128:0] $end
     $var wire  1 * out_a $end
     $var wire  1 ( out_b $end
     $var wire  8 0 out_ir [7:0] $end
     $var wire  8 ? out_reg [7:0] $end
     $var wire  1 F reset $end
     $var wire  8 1 to_a [7:0] $end
     $var wire  8 2 to_b [7:0] $end
     $var wire  8 B to_c [7:0] $end
     $var wire  8 0 to_ir [7:0] $end
    $upscope $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
0#
0$
0%
0&
0'
0(
0)
0*
0+
0,
0-
b0000 .
b0000 /
b00000000 0
b00000000 1
b00000000 2
b00000000 3
b0000 4
b00000000 5
b000 6
b0000 7
b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 8
b00000000 =
b00000000 >
b00000000 ?
b00000000 @
b00000000 A
b00000000 B
b00000000 C
b00000000 D
1E
0F
1G
0H
b1000 I
b0100 J
b0010 K
b0001 L
b1001 M
b1111 N
b1010 O
b0000 P
#1
0E
#2
1#
b001 6
b0001 7
b000000000000000000000000000000000111111111000111110100110100001101000011000001100000011101001011100100001010001011000011000000100 8
b00000001 D
1E
#3
0E
#4
0#
1$
b0001 /
b00000100 0
b010 6
b00000100 ?
b00000000 D
1E
#5
0E
#6
0$
1%
b0100 4
b011 6
b00001000 =
b00100000 >
1E
#7
0E
#8
0%
b10000110 0
b100 6
b10010111 ?
1E
#9
0E
#10
b101 6
b00110000 >
1E
#11
0E
#12
b000 6
b00001100 ?
1E
#13
0E
#14
1#
b001 6
b0010 7
b00000010 D
1E
#15
0E
#16
0#
1$
b0010 /
b010 6
b00000000 D
1E
#17
0E
#18
0$
1%
b1000 .
b0110 4
b011 6
b00010000 =
1E
#19
0E
#20
0%
1*
b01000101 0
b00001100 1
b100 6
1E
#21
b00001100 @
0E
#22
0*
b00000000 1
b101 6
b00101000 >
1E
#23
0E
#24
b000 6
b00001110 ?
1E
#25
0E
#26
1#
b001 6
b0011 7
b00000011 D
1E
#27
0E
#28
0#
1$
b0011 /
b010 6
b00000000 D
1E
#29
0E
#30
0$
1%
b0100 .
b0101 4
b011 6
b00011000 =
1E
#31
0E
#32
0%
1(
b00100001 0
b00001110 2
b100 6
1E
#33
b00001110 A
0E
#34
0(
b00000000 2
b101 6
b00001000 >
1E
#35
0E
#36
b000 6
b10000110 ?
1E
#37
0E
#38
1#
b001 6
b0100 7
b00000100 D
1E
#39
0E
#40
0#
1$
b0100 /
b010 6
b00000000 D
1E
#41
0E
#42
0$
1%
b0010 .
b0001 4
b011 6
b00100000 =
1E
#43
0E
#44
0%
1,
b10010111 0
b00011010 5
b100 6
1E
#45
0E
#46
0,
b00011010 3
b101 6
b00111000 >
1E
#47
b00011010 B
0E
#48
b000 6
1E
#49
0E
#50
1#
b001 6
b0101 7
b00000101 D
1E
#51
0E
#52
0#
1$
b0101 /
b010 6
b00000000 D
1E
#53
0E
#54
0$
1%
b1001 .
b0111 4
b011 6
b00101000 =
1E
#55
0E
#56
0%
1&
b0111 /
b00001110 0
b100 6
b0110 7
1E
#57
0E
#58
0&
b101 6
b00111000 =
b01110000 >
1E
#59
0E
#60
b10000110 0
b000 6
b00000000 ?
1E
#61
0E
#62
1#
b001 6
b0111 7
b00110000 >
b00000111 D
1E
#63
0E
#64
0#
1$
b010 6
b00001100 ?
b00000000 D
1E
#65
0E
#66
0$
1%
b1000 .
b0110 4
b011 6
1E
#67
0E
#68
0%
1*
b00001100 1
b100 6
1E
#69
0E
#70
0*
b00000000 1
b101 6
1E
#71
0E
#72
b000 6
1E
#73
0E
#74
1#
b001 6
b1000 7
b00001000 D
1E
#75
0E
#76
0#
1$
b1000 /
b010 6
b00000000 D
1E
#77
0E
#78
0$
1%
b011 6
b01000000 =
1E
#79
0E
#80
0%
1*
b00001100 1
b100 6
1E
#81
0E
#82
0*
b00000000 1
b101 6
1E
#83
0E
#84
b000 6
1E
#85
0E
#86
1#
b001 6
b1001 7
b00001001 D
1E
#87
0E
#88
0#
1$
b1001 /
b010 6
b00000000 D
1E
#89
0E
#90
0$
1%
b011 6
b01001000 =
1E
#91
0E
#92
0%
1*
b10100110 0
b00001100 1
b100 6
1E
#93
0E
#94
0*
b00000000 1
b101 6
1E
#95
0E
#96
b000 6
1E
#97
0E
#98
1#
b001 6
b1010 7
b00001010 D
1E
#99
0E
#100
0#
1$
b1010 /
b010 6
b00000000 D
1E
#101
0E
#102
0$
1%
b1010 .
b011 6
b01010000 =
1E
#103
0E
#104
0%
1+
b10001111 0
b100 6
b000011010000000000000000000000000111111111000111110100110100001101000011000001100000011101001011100100001010001011000011000000100 8
1E
#105
0E
#106
0+
b101 6
b01111000 >
1E
#107
0E
#108
b000 6
b00011010 ?
1E
#109
0E
#110
1#
b001 6
b1011 7
b00001011 D
1E
#111
0E
#112
0#
1$
b1011 /
b010 6
b00000000 D
1E
#113
0E
#114
0$
1%
b1000 .
b1111 4
b011 6
b01011000 =
1E
#115
0E
#116
0%
1*
b11111111 0
b00011010 1
b100 6
1E
#117
b00011010 @
0E
#118
0*
b00000000 1
b101 6
1E
#119
0E
#120
b000 6
1E
#121
0E
#122
1#
b001 6
b1100 7
b00001100 D
1E
#123
0E
#124
0#
1$
b1100 /
b010 6
b00000000 D
1E
#125
0E
#126
0$
1%
b1111 .
b011 6
b01100000 =
1E
#127
0E
#128
0%
b00000000 0
1E
#129
0E
#130
b00000000 >
1E
#131
0E
#132
b00000100 ?
1E
#133
0E
#134
1E
#135
0E
#136
1E
#137
0E
#138
1E
#139
0E
#140
1E
#141
0E
#142
1E
#143
0E
#144
1E
#145
0E
#146
1E
#147
0E
#148
1E
#149
0E
#150
1E
#151
0E
#152
1E
#153
0E
#154
1E
#155
0E
#156
1E
#157
0E
#158
1E
#159
0E
#160
1E
#161
0E
#162
1E
#163
0E
#164
1E
#165
0E
#166
1E
#167
0E
#168
1E
#169
0E
#170
1E
#171
0E
#172
1E
#173
0E
#174
1E
#175
0E
#176
1E
#177
0E
#178
1E
#179
0E
#180
1E
#181
0E
#182
1E
#183
0E
#184
1E
#185
0E
#186
1E
#187
0E
#188
1E
#189
0E
#190
1E
#191
0E
#192
1E
#193
0E
#194
1E
#195
0E
#196
1E
#197
0E
#198
1E
#199
0E
#200
1E
#201
0E
#202
1E
#203
0E
#204
1E
#205
0E
#206
1E
#207
0E
#208
1E
#209
0E
#210
1E
#211
0E
#212
1E
#213
0E
#214
1E
#215
0E
#216
1E
#217
0E
#218
1E
#219
0E
#220
1E
#221
0E
#222
1E
#223
0E
#224
1E
#225
0E
#226
1E
#227
0E
#228
1E
#229
0E
#230
1E
#231
0E
#232
1E
#233
0E
#234
1E
#235
0E
#236
1E
#237
0E
#238
1E
#239
0E
#240
1E
#241
0E
#242
1E
#243
0E
#244
1E
#245
0E
#246
1E
#247
0E
#248
1E
#249
0E
