$version Generated by VerilatedVcd $end
$timescale 1ps $end

 $scope module TOP $end
  $var wire  1 I clk $end
  $var wire  8 G led_1 [7:0] $end
  $var wire  8 H led_2 [7:0] $end
  $var wire  1 J reset $end
  $scope module top $end
   $var wire  1 I clk $end
   $var wire  8 G led_1 [7:0] $end
   $var wire  8 H led_2 [7:0] $end
   $var wire  1 J reset $end
   $scope module cpu $end
    $var wire  8 3 a_calc [7:0] $end
    $var wire  1 . a_out $end
    $var wire  1 + acc_out $end
    $var wire  1 , ad $end
    $var wire  4 < address_ir [3:0] $end
    $var wire  8 4 b_calc [7:0] $end
    $var wire  1 / b_out $end
    $var wire  8 G bus_d [7:0] $end
    $var wire  8 H bus_i [7:0] $end
    $var wire  8 5 c_calc [7:0] $end
    $var wire  1 0 c_e $end
    $var wire  1 8 c_f $end
    $var wire  1 1 c_g $end
    $var wire  1 2 c_l $end
    $var wire  1 M c_out_acc $end
    $var wire  1 I clk $end
    $var wire  1 ) in_a $end
    $var wire  1 ' in_b $end
    $var wire  1 % ir_a $end
    $var wire  4 7 ir_i [3:0] $end
    $var wire  1 & jmp $end
    $var wire  1 $ mar_a $end
    $var wire  1 * out_a $end
    $var wire  1 ( out_b $end
    $var wire  1 N out_bus $end
    $var wire  1 # pc_a $end
    $var wire  1 J reset $end
    $var wire  1 - sb $end
    $var wire  8 K to_a [7:0] $end
    $var wire  8 ; to_acc [7:0] $end
    $var wire  8 L to_b [7:0] $end
    $var wire  8 : to_ir [7:0] $end
    $var wire  4 9 to_ram [3:0] $end
    $scope module accumulator $end
     $var wire  8 5 areg [7:0] $end
     $var wire  8 G bus_d [7:0] $end
     $var wire  1 I clk $end
     $var wire  8 ; from_inp [7:0] $end
     $var wire  1 M inp_in $end
     $var wire  1 N out_b $end
     $var wire  1 + out_o $end
     $var wire  8 5 to_out [7:0] $end
    $upscope $end
    $scope module alu $end
     $var wire  1 , ad $end
     $var wire  8 G bus_d [7:0] $end
     $var wire  1 0 c_e $end
     $var wire  1 8 c_f $end
     $var wire  1 1 c_g $end
     $var wire  1 2 c_l $end
     $var wire  1 I clk $end
     $var wire  8 3 from_a [7:0] $end
     $var wire  8 4 from_b [7:0] $end
     $var wire  8 ; out [7:0] $end
     $var wire  1 - sub $end
     $var wire  8 ; to_acc [7:0] $end
    $upscope $end
    $scope module areg $end
     $var wire  8 3 areg [7:0] $end
     $var wire  8 G bus_d [7:0] $end
     $var wire  1 I clk $end
     $var wire  8 K from_inp [7:0] $end
     $var wire  1 * inp_in $end
     $var wire  1 . out_b $end
     $var wire  1 N out_o $end
     $var wire  8 3 to_out [7:0] $end
    $upscope $end
    $scope module breg $end
     $var wire  8 4 areg [7:0] $end
     $var wire  8 G bus_d [7:0] $end
     $var wire  1 I clk $end
     $var wire  8 L from_inp [7:0] $end
     $var wire  1 ( inp_in $end
     $var wire  1 / out_b $end
     $var wire  1 N out_o $end
     $var wire  8 4 to_out [7:0] $end
    $upscope $end
    $scope module control $end
     $var wire  4 Q OP_ADD [3:0] $end
     $var wire  4 X OP_CME [3:0] $end
     $var wire  4 Y OP_CMG [3:0] $end
     $var wire  4 Z OP_CML [3:0] $end
     $var wire  4 V OP_DMA [3:0] $end
     $var wire  4 W OP_DMB [3:0] $end
     $var wire  4 T OP_HLT [3:0] $end
     $var wire  4 S OP_JMP [3:0] $end
     $var wire  4 O OP_LDA [3:0] $end
     $var wire  4 P OP_LDB [3:0] $end
     $var wire  4 R OP_SUB [3:0] $end
     $var wire  4 U OP_WRT [3:0] $end
     $var wire  1 . a_out_bus $end
     $var wire  1 + acc_out $end
     $var wire  1 , ad $end
     $var wire  1 N aflag $end
     $var wire  1 / b_out_bus $end
     $var wire  8 G bus_d [7:0] $end
     $var wire  8 H bus_i [7:0] $end
     $var wire  1 0 c_e $end
     $var wire  1 8 c_f $end
     $var wire  1 1 c_g $end
     $var wire  1 2 c_l $end
     $var wire  1 I clk $end
     $var wire  1 ) in_a $end
     $var wire  1 ' in_b $end
     $var wire  1 % ir_a $end
     $var wire  4 7 ir_i [3:0] $end
     $var wire  1 & jmp $end
     $var wire  1 $ mar_a $end
     $var wire  1 * out_a $end
     $var wire  1 ( out_b $end
     $var wire  1 # pc_a $end
     $var wire  1 J reset $end
     $var wire  1 - sb $end
     $var wire  3 6 stagecount [2:0] $end
    $upscope $end
    $scope module counter $end
     $var wire  8 = bus_i [7:0] $end
     $var wire  1 I clk $end
     $var wire  4 < from_ir [3:0] $end
     $var wire  1 & jmp $end
     $var wire  4 > pc [3:0] $end
     $var wire  1 # pc_a $end
     $var wire  1 J reset $end
    $upscope $end
    $scope module ir $end
     $var wire  4 < address [3:0] $end
     $var wire  8 H bus_i [7:0] $end
     $var wire  1 I clk $end
     $var wire  8 : from_ram [7:0] $end
     $var wire  4 7 instruction [3:0] $end
     $var wire  1 % ir_a $end
     $var wire  1 J reset $end
     $var wire  4 7 to_ctrl [3:0] $end
     $var wire  4 < to_ram [3:0] $end
    $upscope $end
    $scope module mar $end
     $var wire  4 9 address [3:0] $end
     $var wire  8 H bus_i [7:0] $end
     $var wire  1 I clk $end
     $var wire  4 < from_ir [3:0] $end
     $var wire  1 & jmp $end
     $var wire  1 $ mar_a $end
     $var wire  4 [ offset [3:0] $end
     $var wire  1 J reset $end
     $var wire  4 9 to_ram [3:0] $end
    $upscope $end
    $scope module ram $end
     $var wire  4 < address_ir [3:0] $end
     $var wire  1 I clk $end
     $var wire  1 ) in_a $end
     $var wire  1 ' in_b $end
     $var wire  1 + in_c $end
     $var wire  8 D index_ir [7:0] $end
     $var wire  8 E index_reg [7:0] $end
     $var wire  4 9 mar_in [3:0] $end
     $var wire 129 ? mem [128:0] $end
     $var wire  1 * out_a $end
     $var wire  1 ( out_b $end
     $var wire  8 : out_ir [7:0] $end
     $var wire  8 F out_reg [7:0] $end
     $var wire  1 J reset $end
     $var wire  8 K to_a [7:0] $end
     $var wire  8 L to_b [7:0] $end
     $var wire  8 5 to_c [7:0] $end
     $var wire  8 : to_ir [7:0] $end
    $upscope $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
0#
0$
0%
0&
0'
0(
0)
0*
0+
0,
0-
0.
0/
00
01
02
b00000000 3
b00000000 4
b00000000 5
b000 6
b0000 7
08
b0000 9
b00000000 :
b00000000 ;
b0000 <
b00000000 =
b0000 >
b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 ?
b00000000 D
b00000000 E
b00000000 F
b00000000 G
b00000000 H
1I
0J
b00000000 K
b00000000 L
1M
0N
b1000 O
b0100 P
b0010 Q
b0001 R
b1001 S
b1111 T
b1010 U
b1011 V
b1101 W
b0101 X
b0111 Y
b0011 Z
b0000 [
#1
1#
b001 6
0I
#2
b0001 >
b000000000000000000000000000000000000000000000000000000000000000000000000011111111101100001000101111111011001101010100001110000001 ?
1I
#3
0#
1$
b010 6
0I
#4
b10000001 :
b00000001 =
b10000001 F
b00000001 H
1I
#5
0$
1%
b011 6
0I
#6
b1000 7
b0001 <
b00001000 E
1I
#7
0%
1*
b100 6
0I
b10000001 K
#8
b01000011 F
1I
b01000011 K
#9
0*
b01000011 3
b101 6
0I
b00000000 K
#10
1I
#11
b000 6
0I
#12
1I
#13
1#
b001 6
0I
#14
b0010 >
1I
#15
0#
1$
b010 6
0I
#16
b0001 9
b00000010 =
b00000010 H
1I
#17
0$
1%
b011 6
0I
#18
b00001000 D
1I
#19
0%
1*
b100 6
0I
b01000011 K
#20
b01000011 :
1I
#21
0*
b101 6
0I
b00000000 K
#22
b00011000 E
1I
#23
b000 6
0I
#24
b11111011 F
1I
#25
1#
b001 6
0I
#26
b0011 >
1I
#27
0#
1$
b010 6
0I
#28
b0010 9
b00000011 =
b00000011 H
1I
#29
0$
1%
b011 6
0I
#30
b0100 7
b0011 <
b00010000 D
1I
#31
0%
1(
b100 6
0I
b11111011 L
#32
b00110101 :
1I
#33
0(
b11111011 4
b101 6
0I
b00000000 L
#34
b00101000 E
1I
#35
b000 6
0I
#36
b10110000 F
1I
#37
1#
b001 6
0I
#38
b0100 >
1I
#39
0#
1$
b010 6
0I
#40
b0011 9
b00000100 =
b00000100 H
1I
#41
0$
1%
b011 6
0I
#42
b0011 7
b0101 <
b00011000 D
1I
#43
0%
12
b100 6
0I
#44
18
b11111011 :
1I
#45
1&
02
b101 6
0I
#46
08
b0101 9
b0101 >
b01011000 E
1I
#47
0&
b000 6
0I
#48
b00000101 =
b00101000 D
b00000000 F
b00000101 H
1I
#49
1#
b001 6
0I
#50
b10110000 :
b0110 >
1I
#51
0#
1$
b010 6
0I
#52
b00000110 =
b00000000 E
b00000110 H
1I
#53
0$
1%
b011 6
0I
#54
b1011 7
b0000 <
b10000001 F
1I
#55
0%
1.
b100 6
b01000011 G
0I
#56
1I
#57
b101 6
0I
#58
1I
#59
b000 6
0I
#60
1I
#61
1#
b001 6
0I
#62
b0111 >
1I
#63
0#
1$
b010 6
0I
#64
b0110 9
b00000111 =
b00000111 H
1I
#65
0$
1%
b011 6
0I
#66
b00110000 D
1I
#67
0%
b100 6
0I
#68
b11111111 :
1I
#69
b101 6
0I
#70
b01111000 E
1I
#71
b000 6
0I
#72
b00000000 F
1I
#73
1#
b001 6
0I
#74
b1000 >
1I
#75
0#
1$
b010 6
0I
#76
b0111 9
b00001000 =
b00001000 H
1I
#77
0$
1%
b011 6
0I
#78
b1111 7
b1111 <
b00111000 D
1I
#79
0%
0I
#80
b00000000 :
1I
#81
0I
#82
b00000000 E
1I
#83
0I
#84
b10000001 F
1I
#85
0I
#86
1I
#87
0I
#88
1I
#89
0I
#90
1I
#91
0I
#92
1I
#93
0I
#94
1I
#95
0I
#96
1I
#97
0I
#98
1I
#99
0I
#100
1I
#101
0I
#102
1I
#103
0I
#104
1I
#105
0I
#106
1I
#107
0I
#108
1I
#109
0I
#110
1I
#111
0I
#112
1I
#113
0I
#114
1I
#115
0I
#116
1I
#117
0I
#118
1I
#119
0I
#120
1I
#121
0I
#122
1I
#123
0I
#124
1I
#125
0I
#126
1I
#127
0I
#128
1I
#129
0I
#130
1I
#131
0I
#132
1I
#133
0I
#134
1I
#135
0I
#136
1I
#137
0I
#138
1I
#139
0I
#140
1I
#141
0I
#142
1I
#143
0I
#144
1I
#145
0I
#146
1I
#147
0I
#148
1I
#149
0I
#150
1I
#151
0I
#152
1I
#153
0I
#154
1I
#155
0I
#156
1I
#157
0I
#158
1I
#159
0I
#160
1I
#161
0I
#162
1I
#163
0I
#164
1I
#165
0I
#166
1I
#167
0I
#168
1I
#169
0I
#170
1I
#171
0I
#172
1I
#173
0I
#174
1I
#175
0I
#176
1I
#177
0I
#178
1I
#179
0I
#180
1I
#181
0I
#182
1I
#183
0I
#184
1I
#185
0I
#186
1I
#187
0I
#188
1I
#189
0I
#190
1I
#191
0I
#192
1I
#193
0I
#194
1I
#195
0I
#196
1I
#197
0I
#198
1I
#199
0I
#200
1I
#201
0I
#202
1I
#203
0I
#204
1I
#205
0I
#206
1I
#207
0I
#208
1I
#209
0I
#210
1I
#211
0I
#212
1I
#213
0I
#214
1I
#215
0I
#216
1I
#217
0I
#218
1I
#219
0I
#220
1I
#221
0I
#222
1I
#223
0I
#224
1I
#225
0I
#226
1I
#227
0I
#228
1I
#229
0I
#230
1I
#231
0I
#232
1I
#233
0I
#234
1I
#235
0I
#236
1I
#237
0I
#238
1I
#239
0I
#240
1I
#241
0I
#242
1I
#243
0I
#244
1I
#245
0I
#246
1I
#247
0I
#248
1I
#249
0I
