$version Generated by VerilatedVcd $end
$timescale 1ps $end

 $scope module TOP $end
  $var wire  8 B bus_i [7:0] $end
  $var wire  1 C clk $end
  $var wire  1 D reset $end
  $scope module top $end
   $var wire  8 ? a_calc [7:0] $end
   $var wire  1 F a_out $end
   $var wire  1 + ad $end
   $var wire  4 3 address_ir [3:0] $end
   $var wire  8 @ b_calc [7:0] $end
   $var wire  1 F b_out $end
   $var wire  8 G bus_d [7:0] $end
   $var wire  8 B bus_i [7:0] $end
   $var wire  8 A c_calc [7:0] $end
   $var wire  1 F c_out $end
   $var wire  1 E c_out_acc $end
   $var wire  1 C clk $end
   $var wire  1 ) in_a $end
   $var wire  1 ' in_b $end
   $var wire  1 % ir_a $end
   $var wire  4 - ir_i [3:0] $end
   $var wire  1 & jmp $end
   $var wire  1 $ mar_a $end
   $var wire  1 * out_a $end
   $var wire  1 ( out_b $end
   $var wire  1 F out_bus $end
   $var wire  1 # pc_a $end
   $var wire  1 D reset $end
   $var wire  1 , sb $end
   $var wire  8 0 to_a [7:0] $end
   $var wire  8 2 to_acc [7:0] $end
   $var wire  8 1 to_b [7:0] $end
   $var wire  8 / to_ir [7:0] $end
   $var wire  4 . to_ram [3:0] $end
   $scope module accumulator $end
    $var wire  8 A areg [7:0] $end
    $var wire  8 G bus_d [7:0] $end
    $var wire  1 C clk $end
    $var wire  8 2 from_ram [7:0] $end
    $var wire  1 F out_b $end
    $var wire  1 E ram_in $end
    $var wire  8 A to_c [7:0] $end
   $upscope $end
   $scope module alu $end
    $var wire  1 + ad $end
    $var wire  8 G bus_d [7:0] $end
    $var wire  1 C clk $end
    $var wire  8 ? from_a [7:0] $end
    $var wire  8 @ from_b [7:0] $end
    $var wire  8 4 out [7:0] $end
    $var wire  1 , sub $end
    $var wire  8 2 to_acc [7:0] $end
   $upscope $end
   $scope module areg $end
    $var wire  8 ? areg [7:0] $end
    $var wire  8 G bus_d [7:0] $end
    $var wire  1 C clk $end
    $var wire  8 0 from_ram [7:0] $end
    $var wire  1 F out_b $end
    $var wire  1 * ram_in $end
    $var wire  8 ? to_c [7:0] $end
   $upscope $end
   $scope module breg $end
    $var wire  8 @ areg [7:0] $end
    $var wire  8 G bus_d [7:0] $end
    $var wire  1 C clk $end
    $var wire  8 1 from_ram [7:0] $end
    $var wire  1 F out_b $end
    $var wire  1 ( ram_in $end
    $var wire  8 @ to_c [7:0] $end
   $upscope $end
   $scope module control $end
    $var wire  4 J OP_ADD [3:0] $end
    $var wire  4 M OP_DIV [3:0] $end
    $var wire  4 O OP_HLT [3:0] $end
    $var wire  4 N OP_JMP [3:0] $end
    $var wire  4 H OP_LDA [3:0] $end
    $var wire  4 I OP_LDB [3:0] $end
    $var wire  4 L OP_MUL [3:0] $end
    $var wire  4 K OP_SUB [3:0] $end
    $var wire  1 + ad $end
    $var wire  1 F aflag $end
    $var wire  8 G bus_d [7:0] $end
    $var wire  8 B bus_i [7:0] $end
    $var wire  1 C clk $end
    $var wire  1 ) in_a $end
    $var wire  1 ' in_b $end
    $var wire  1 % ir_a $end
    $var wire  4 - ir_i [3:0] $end
    $var wire  1 & jmp $end
    $var wire  1 $ mar_a $end
    $var wire  1 * out_a $end
    $var wire  1 ( out_b $end
    $var wire  1 # pc_a $end
    $var wire  1 D reset $end
    $var wire  1 , sb $end
    $var wire  3 5 stagecount [2:0] $end
   $upscope $end
   $scope module counter $end
    $var wire  8 B bus_i [7:0] $end
    $var wire  1 C clk $end
    $var wire  4 6 pc [3:0] $end
    $var wire  1 # pc_a $end
    $var wire  1 D reset $end
   $upscope $end
   $scope module ir $end
    $var wire  4 3 address [3:0] $end
    $var wire  8 B bus_i [7:0] $end
    $var wire  1 C clk $end
    $var wire  8 / from_ram [7:0] $end
    $var wire  4 - instruction [3:0] $end
    $var wire  1 % ir_a $end
    $var wire  1 D reset $end
    $var wire  4 - to_ctrl [3:0] $end
    $var wire  4 3 to_ram [3:0] $end
   $upscope $end
   $scope module mar $end
    $var wire  4 . address [3:0] $end
    $var wire  8 B bus_i [7:0] $end
    $var wire  1 C clk $end
    $var wire  4 3 from_ir [3:0] $end
    $var wire  1 & jmp $end
    $var wire  1 $ mar_a $end
    $var wire  1 D reset $end
    $var wire  4 . to_ram [3:0] $end
   $upscope $end
   $scope module ram $end
    $var wire  4 3 address_ir [3:0] $end
    $var wire  1 C clk $end
    $var wire  1 ) in_a $end
    $var wire  1 ' in_b $end
    $var wire  8 < index_ir [7:0] $end
    $var wire  8 = index_reg [7:0] $end
    $var wire  4 . mar_in [3:0] $end
    $var wire 129 7 mem [128:0] $end
    $var wire  1 * out_a $end
    $var wire  1 ( out_b $end
    $var wire  8 / out_ir [7:0] $end
    $var wire  8 > out_reg [7:0] $end
    $var wire  1 D reset $end
    $var wire  8 0 to_a [7:0] $end
    $var wire  8 1 to_b [7:0] $end
    $var wire  8 / to_ir [7:0] $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
0#
0$
0%
0&
0'
0(
0)
0*
0+
0,
b0000 -
b0000 .
b00000000 /
b00000000 0
b00000000 1
b00000000 2
b0000 3
b00000000 4
b000 5
b0000 6
b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 7
b00000000 <
b00000000 =
b00000000 >
b00000000 ?
b00000000 @
b00000000 A
b00000000 B
1C
0D
1E
0F
b00000000 G
b1000 H
b0100 I
b0010 J
b0001 K
b1100 L
b1010 M
b1001 N
b1111 O
#1
0C
#2
1#
b001 5
b0001 6
b000000000000000000000000000000000000000000000000000000000111111111000010100001100000011101001011100100001010001011000011000000100 7
b00000001 B
1C
#3
0C
#4
0#
1$
b0001 .
b00000100 /
b010 5
b00000100 >
b00000000 B
1C
#5
0C
#6
0$
1%
b0100 3
b011 5
b00001000 <
b00100000 =
1C
#7
0C
#8
0%
b10000110 /
b100 5
b10010111 >
1C
#9
0C
#10
b101 5
b00110000 =
1C
#11
0C
#12
b000 5
b00001100 >
1C
#13
0C
#14
1#
b001 5
b0010 6
b00000010 B
1C
#15
0C
#16
0#
1$
b0010 .
b010 5
b00000000 B
1C
#17
0C
#18
0$
1%
b1000 -
b0110 3
b011 5
b00010000 <
1C
#19
0C
#20
0%
1*
b01000101 /
b00001100 0
b100 5
1C
#21
b00001100 ?
0C
#22
0*
b00000000 0
b101 5
b00101000 =
1C
#23
0C
#24
b000 5
b00001110 >
1C
#25
0C
#26
1#
b001 5
b0011 6
b00000011 B
1C
#27
0C
#28
0#
1$
b0011 .
b010 5
b00000000 B
1C
#29
0C
#30
0$
1%
b0100 -
b0101 3
b011 5
b00011000 <
1C
#31
0C
#32
0%
1(
b00100001 /
b00001110 1
b100 5
1C
#33
b00001110 @
0C
#34
0(
b00000000 1
b101 5
b00001000 =
1C
#35
0C
#36
b000 5
b10000110 >
1C
#37
0C
#38
1#
b001 5
b0100 6
b00000100 B
1C
#39
0C
#40
0#
1$
b0100 .
b010 5
b00000000 B
1C
#41
0C
#42
0$
1%
b0010 -
b0001 3
b011 5
b00100000 <
1C
#43
0C
#44
0%
1+
b10010111 /
b00011010 4
b100 5
1C
#45
0C
#46
0+
b00011010 2
b101 5
b00111000 =
1C
#47
b00011010 A
0C
#48
b000 5
b10000101 >
1C
#49
0C
#50
1#
b001 5
b0101 6
b00000101 B
1C
#51
0C
#52
0#
1$
b0101 .
b010 5
b00000000 B
1C
#53
0C
#54
0$
1%
b1001 -
b0111 3
b011 5
b00101000 <
1C
#55
0C
#56
0%
1&
b0111 .
b00001110 /
b100 5
1C
#57
0C
#58
0&
b101 5
b00111000 <
b01110000 =
1C
#59
0C
#60
b10000101 /
b000 5
b00000000 >
1C
#61
0C
#62
1#
b001 5
b0110 6
b00101000 =
b00000110 B
1C
#63
0C
#64
0#
1$
b0110 .
b010 5
b00001110 >
b00000000 B
1C
#65
0C
#66
0$
1%
b1000 -
b0101 3
b011 5
b00110000 <
1C
#67
0C
#68
0%
1*
b00001100 /
b00001110 0
b100 5
1C
#69
b00001110 ?
0C
#70
0*
b00000000 0
b101 5
b01100000 =
1C
#71
0C
#72
b000 5
b00000000 >
1C
#73
0C
#74
1#
b001 5
b0111 6
b00000111 B
1C
#75
0C
#76
0#
1$
b0111 .
b010 5
b00000000 B
1C
#77
0C
#78
0$
1%
b0000 -
b1100 3
b011 5
b00111000 <
1C
#79
0C
#80
0%
b10000101 /
b100 5
1C
#81
0C
#82
b101 5
b00101000 =
1C
#83
0C
#84
b000 5
b00001110 >
1C
#85
0C
#86
1#
b001 5
b1000 6
b00001000 B
1C
#87
0C
#88
0#
1$
b1000 .
b010 5
b00000000 B
1C
#89
0C
#90
0$
1%
b1000 -
b0101 3
b011 5
b01000000 <
1C
#91
0C
#92
0%
1*
b11111111 /
b00001110 0
b100 5
1C
#93
0C
#94
0*
b00000000 0
b101 5
b01111000 =
1C
#95
0C
#96
b000 5
b00000000 >
1C
#97
0C
#98
1#
b001 5
b1001 6
b00001001 B
1C
#99
0C
#100
0#
1$
b1001 .
b010 5
b00000000 B
1C
#101
0C
#102
0$
1%
b1111 -
b1111 3
b011 5
b01001000 <
1C
#103
0C
#104
0%
b00000000 /
1C
#105
0C
#106
b00000000 =
1C
#107
0C
#108
b00000100 >
1C
#109
0C
#110
1C
#111
0C
#112
1C
#113
0C
#114
1C
#115
0C
#116
1C
#117
0C
#118
1C
#119
0C
#120
1C
#121
0C
#122
1C
#123
0C
#124
1C
#125
0C
#126
1C
#127
0C
#128
1C
#129
0C
#130
1C
#131
0C
#132
1C
#133
0C
#134
1C
#135
0C
#136
1C
#137
0C
#138
1C
#139
0C
#140
1C
#141
0C
#142
1C
#143
0C
#144
1C
#145
0C
#146
1C
#147
0C
#148
1C
#149
0C
#150
1C
#151
0C
#152
1C
#153
0C
#154
1C
#155
0C
#156
1C
#157
0C
#158
1C
#159
0C
#160
1C
#161
0C
#162
1C
#163
0C
#164
1C
#165
0C
#166
1C
#167
0C
#168
1C
#169
0C
#170
1C
#171
0C
#172
1C
#173
0C
#174
1C
#175
0C
#176
1C
#177
0C
#178
1C
#179
0C
#180
1C
#181
0C
#182
1C
#183
0C
#184
1C
#185
0C
#186
1C
#187
0C
#188
1C
#189
0C
#190
1C
#191
0C
#192
1C
#193
0C
#194
1C
#195
0C
#196
1C
#197
0C
#198
1C
#199
0C
#200
1C
#201
0C
#202
1C
#203
0C
#204
1C
#205
0C
#206
1C
#207
0C
#208
1C
#209
0C
#210
1C
#211
0C
#212
1C
#213
0C
#214
1C
#215
0C
#216
1C
#217
0C
#218
1C
#219
0C
#220
1C
#221
0C
#222
1C
#223
0C
#224
1C
#225
0C
#226
1C
#227
0C
#228
1C
#229
0C
#230
1C
#231
0C
#232
1C
#233
0C
#234
1C
#235
0C
#236
1C
#237
0C
#238
1C
#239
0C
#240
1C
#241
0C
#242
1C
#243
0C
#244
1C
#245
0C
#246
1C
#247
0C
#248
1C
#249
0C
